#!/usr/bin/env zsh
emulate -L zsh
setopt extendedglob

local -a handler

# On first run, setup editor
if (($+functions[→evil-registers::setup-editor])); then
	→evil-registers::setup-editor
	unfunction →evil-registers::setup-editor
fi

# Get preferences from zstyle
zstyle -a :zle:evil-registers:${(q)_evil_register} yank handler

# append or set remote
local old new
case $_evil_register in
[A-Z]) # manually append
	zle .vi-set-buffer "${_evil_register:l}"
	old=$registers[${_evil_register:l}]
	;;
[a-z0-9_]) ;;
*)
	_evil_register=x
	new=:$registers[x] # overwrite
esac

zle .$WIDGET

# Does handler take an argument?
[[ ${handler[1]:l} = -*a* ]] && handler+=($_evil_register)

# How does handler take input?
case ${handler[1]:l} in
	-v) # $handler is a parameter name
		typeset -g $handler[2]=$CUTBUFFER
		;;
	-*p*) # positional parameter
		(${handler:1} $CUTBUFFER &)
		;;
	-*)  # stdin
		(${handler:1} <<< $CUTBUFFER &)
		;;
	'') # no handler
		;;
	*)  # no flags, assume stdin with whole $handler
		($handler <<< $CUTBUFFER &)
		;;

esac

# Append?
if (($#new)); then
	registers[x]=${new:1}
else
	registers[${_evil_register:l}]="$old${registers[${_evil_register:l}]}"
fi

unset _evil_register
