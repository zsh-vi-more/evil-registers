#!/usr/bin/env zsh
emulate -L zsh

local -a handler

# On first run, setup editor
if (($+functions[→evil-registers::setup-editor])); then
	→evil-registers::setup-editor
	unfunction →evil-registers::setup-editor
fi

# Get preferences from zstyle
zstyle -a :zle:evil-registers:${(q)_evil_register} put  handler

local REPLY

# Does handler take an argument?
[[ ${handler[1]:l} = -*a* ]] && handler+=($_evil_register)

# How does handler output?
case ${handler[1]:l} in
	-v)   # $handler is a parameter name
		REPLY=${(P)handler}
	;;
	-*r*) # REPLY parameter
		${handler:1}
	;;
	-*) # stdout
		REPLY=$(${handler:1})
	;;
	'') # nothing? Assume failure
		unset REPLY
	;;
	*)  # no flags provided, assume stdout with whole $handler
		REPLY=$($handler)
esac

# If _evil_register is a builtin buffer,
# then set ZLE's internal registers array
if [[ $_evil_register = [a-zA-Z] ]]; then
	if (($#REPLY)); then
		registers[$_evil_register]=$REPLY
	fi
# Not builtin, use default CUTBUFFER:
elif [[ -v REPLY ]]; then
	zle .vi-set-buffer ''
	CUTBUFFER=$REPLY
fi
zle .$WIDGET
unset _evil_register
